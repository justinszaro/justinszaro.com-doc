"use strict";(self.webpackChunkjustinszaro_com_docs=self.webpackChunkjustinszaro_com_docs||[]).push([[875],{2564:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"technologies/Javascript/Packages/MongooseJS/quick-start","title":"Mongoose","description":"- An elegant mongodb object modeling for node.js.","source":"@site/docs/technologies/Javascript/Packages/MongooseJS/quick-start.md","sourceDirName":"technologies/Javascript/Packages/MongooseJS","slug":"/technologies/Javascript/Packages/MongooseJS/quick-start","permalink":"/docs/technologies/Javascript/Packages/MongooseJS/quick-start","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"technologies","previous":{"title":"Mongoose Guides","permalink":"/docs/technologies/Javascript/Packages/MongooseJS/guides"},"next":{"title":"Easy Peasy Tutorials","permalink":"/docs/technologies/React/Packages/EasyPeasy/tutorials"}}');var t=s(4848),a=s(8453);const i={},c="Mongoose",l={},r=[{value:"MongoDB (As said by ChatGpt)",id:"mongodb-as-said-by-chatgpt",level:2},{value:"Quick Start",id:"quick-start",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"mongoose",children:"Mongoose"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"An elegant mongodb object modeling for node.js."}),"\n",(0,t.jsx)(n.li,{children:"First, ensure MongoDB and Node.js are installed."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"mongodb-as-said-by-chatgpt",children:"MongoDB (As said by ChatGpt)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"MongoDB is a popular NoSQL database that stores data in flexible, JSON-like documents"}),"\n",(0,t.jsx)(n.li,{children:"Instead of using tables and rows as in traditional relational databases, MongoDB uses collections and documents"}),"\n",(0,t.jsxs)(n.li,{children:["Key features:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Document-oriented: Data is stored in flexible JSON-like documents"}),"\n",(0,t.jsx)(n.li,{children:"Scalable: Supports horizontal scaling through sharding"}),"\n",(0,t.jsx)(n.li,{children:"High Performance: Provides high-speed access to data with indexing"}),"\n",(0,t.jsx)(n.li,{children:"Free and open-source"}),"\n",(0,t.jsx)(n.li,{children:"Supports rich queries, aggregation, and full-text search"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Install mongoose from the command line:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"npm install mongoose --save\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"To start mongoose and connect to MongoDB"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'// getting-started.js\nconst mongoose = require("mongoose");\n\nmain().catch((err) => console.log(err));\n\nasync function main() {\n  await mongoose.connect("mongodb://127.0.0.1:27017/test");\n\n  // use `await mongoose.connect(\'mongodb://user:password@127.0.0.1:27017/test\');` if your database has auth enabled\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Within Mongoose, everything is derived from schema:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const kittySchema = new mongoose.Schema({\n  name: String,\n});\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Next, the schema need to be compiled into a Model."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const Kitten = mongoose.model("Kitten", kittySchema);\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A model is any class that documents are constructed in."}),"\n",(0,t.jsx)(n.li,{children:"To create a document:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const silence = new Kitten({ name: \"Silence\" });\nconsole.log(silence.name); // 'Silence'\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Methods can be added to the methods property of a schema to be exposed on each document instance:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'// NOTE: methods must be added to the schema before compiling it with mongoose.model()\nkittySchema.methods.speak = function speak() {\n  const greeting = this.name\n    ? "Meow name is " + this.name\n    : "I don\'t have a name";\n  console.log(greeting);\n};\n\nconst Kitten = mongoose.model("Kitten", kittySchema);\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fluffy = new Kitten({ name: "fluffy" });\nfluffy.speak(); // "Meow name is fluffy"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Documents can be saved to the database using the ",(0,t.jsx)(n.code,{children:"save"})," method."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"await fluffy.save();\nfluffy.speak();\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"All the documents of that model can be found through the model:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const kittens = await Kitten.find();\nconsole.log(kittens);\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["To query models, Mongoose supports MongoDBs ",(0,t.jsx)(n.a,{href:"https://mongoosejs.com/docs/queries.html",children:"querying"})," syntax:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"await Kitten.find({ name: /^fluff/ });\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var o=s(6540);const t={},a=o.createContext(t);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);