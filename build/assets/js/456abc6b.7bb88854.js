"use strict";(self.webpackChunkjustinszaro_com_docs=self.webpackChunkjustinszaro_com_docs||[]).push([[2436],{3414:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"technologies/Wordpress/Wordpress Custom Post Types and Taxonomies","title":"Custom Post Types and Taxonomies:","description":"What are custom post types and taxonomies?","source":"@site/docs/technologies/Wordpress/custom-post-types-and-taxonomies.md","sourceDirName":"technologies/Wordpress","slug":"/technologies/Wordpress/Wordpress Custom Post Types and Taxonomies","permalink":"/docs/technologies/Wordpress/Wordpress Custom Post Types and Taxonomies","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"php","permalink":"/docs/tags/php"},{"inline":true,"label":"wordpress","permalink":"/docs/tags/wordpress"},{"inline":true,"label":"post types","permalink":"/docs/tags/post-types"},{"inline":true,"label":"taxonomies","permalink":"/docs/tags/taxonomies"}],"version":"current","frontMatter":{"id":"Wordpress Custom Post Types and Taxonomies","tags":["php","wordpress","post types","taxonomies"]},"sidebar":"technologies","previous":{"title":"Building a WordPress Child Theme","permalink":"/docs/technologies/Wordpress/Wordpress Child Themes"},"next":{"title":"Wordpress DRY Development Techniques","permalink":"/docs/technologies/Wordpress/Wordpress DRY Development Techniques"}}');var t=n(4848),i=n(8453);const l={id:"Wordpress Custom Post Types and Taxonomies",tags:["php","wordpress","post types","taxonomies"]},r="Custom Post Types and Taxonomies:",a={},d=[{value:"What are custom post types and taxonomies?",id:"what-are-custom-post-types-and-taxonomies",level:2},{value:"What are custom post types?",id:"what-are-custom-post-types",level:4},{value:"What are custom taxonomies?",id:"what-are-custom-taxonomies",level:4},{value:"Where does the code belong for custom post types or taxonomies?",id:"where-does-the-code-belong-for-custom-post-types-or-taxonomies",level:4},{value:"Creating Custom Post Types without code:",id:"creating-custom-post-types-without-code",level:2},{value:"The no-code solutions:",id:"the-no-code-solutions",level:4},{value:"Coding your Own Custom Post Types:",id:"coding-your-own-custom-post-types",level:2},{value:"Creating your post types and taxonomies:",id:"creating-your-post-types-and-taxonomies",level:4},{value:"Coding your Own Custom Post Templates:",id:"coding-your-own-custom-post-templates",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"custom-post-types-and-taxonomies",children:"Custom Post Types and Taxonomies:"})}),"\n",(0,t.jsx)(s.h2,{id:"what-are-custom-post-types-and-taxonomies",children:"What are custom post types and taxonomies?"}),"\n",(0,t.jsx)(s.h4,{id:"what-are-custom-post-types",children:"What are custom post types?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["There are multiple different post types already defined:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Posts"}),"\n",(0,t.jsx)(s.li,{children:"Pages"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["Native Post Attributes:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Organized in Reverse-chronological order"}),"\n",(0,t.jsx)(s.li,{children:"Non-Hierarchical"}),"\n",(0,t.jsx)(s.li,{children:"Organized based on author, date published, or tags."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["Native Page Attributes","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Single Pieces of content"}),"\n",(0,t.jsx)(s.li,{children:"Can have parent/child relationships"}),"\n",(0,t.jsx)(s.li,{children:"No index page - shown in menu"}),"\n",(0,t.jsx)(s.li,{children:"No categories or tags"}),"\n",(0,t.jsx)(s.li,{children:"Usually Accessed through direct links"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.li,{children:"Pages are normally static content, while posts are normally more time-sensitive information."}),"\n",(0,t.jsx)(s.li,{children:"Custom Post Types allow you to create your own custom content types."}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"what-are-custom-taxonomies",children:"What are custom taxonomies?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Taxonomies are schemes of classification"}),"\n",(0,t.jsx)(s.li,{children:"Taxonomies - A way to organize data, which allows you to relate one item to other similar itesm ina  heiracrhical or non-hierarhicical group."}),"\n",(0,t.jsxs)(s.li,{children:["There are two default taxonomies","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Categories (required)","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Have a hierarchical structure."}),"\n",(0,t.jsx)(s.li,{children:"Have a parent child relationship."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["Tags:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"non-hierarchical"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.li,{children:"Custom taxonimies can be hierarchical or non-hierarchical. This can also apply to your regular posts."}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"where-does-the-code-belong-for-custom-post-types-or-taxonomies",children:"Where does the code belong for custom post types or taxonomies?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["They used to belong in themes....","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"However, if you choose to change your theme, you will lose the custom functionality."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.li,{children:"They are now done in a plugin, so you can keep the custom post types or taxonimies or theme switch. A child theme can then be made so that you can create custom styles."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"creating-custom-post-types-without-code",children:"Creating Custom Post Types without code:"}),"\n",(0,t.jsx)(s.h4,{id:"the-no-code-solutions",children:"The no-code solutions:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["There are certain plugins that allow you to create custom post types:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Custom Post Type UI"}),"\n",(0,t.jsx)(s.li,{children:"Pods - Custom Content Types and Fields"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"... Moving on the the code sections. (UI is self explainitory for those two plugins)"}),"\n",(0,t.jsx)(s.h2,{id:"coding-your-own-custom-post-types",children:"Coding your Own Custom Post Types:"}),"\n",(0,t.jsx)(s.h4,{id:"creating-your-post-types-and-taxonomies",children:"Creating your post types and taxonomies:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"It is a good idea to suffix your folder with post-types."}),"\n",(0,t.jsx)(s.li,{children:"The Plugin definition block must be included."}),"\n",(0,t.jsx)(s.li,{children:"To ensure a plugin isn't accessed directly:"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'if ( ! defined ( "WPINC" )) {\n    die;\n}\n'})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Common definitions for wordpress plugins:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"define( '<slug>_VERSION', '1.0.0' )"})," - Version of the plugin"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"define( '<slug>DOMAIN', '<domain>' )"})," - Normally the name of the plugin folder."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"define( '<slug>PATH', plugin_dir_path( __FILE__ ) )"})," - File Path of the plugin."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"== See example in parent folder for code implementation =="}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"The wordpress codex will give you all the labels that you can customize."}),"\n",(0,t.jsxs)(s.li,{children:["You must flush the permalinks to display the new post types on the front-end.","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Archive pages are the base permalink."}),"\n",(0,t.jsxs)(s.li,{children:["You can flush the permalinks in code:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"flush_rewrite_rules( $hard );"})}),"\n",(0,t.jsx)(s.li,{children:"You want to be careful that you are not calling this function too much!"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["Wordpress does support meta-types.","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"You can include singular post types."}),"\n",(0,t.jsx)(s.li,{children:"Advanced Custom Fields is a great plugin that allows you to create custom fields by yourself."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.li,{children:"Taxonomies do not have a top level archive page."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"coding-your-own-custom-post-templates",children:"Coding your Own Custom Post Templates:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Naming custom taxonomy tempalates (words starting with $ can by anything you like):","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"taxonomy-$taxonomy-$term.php"}),"\n",(0,t.jsx)(s.li,{children:"taxonomy-$taxonomy.php"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["Page templates are normally named:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"$custom.php"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["By default, wordpress will only display the default post type on the main page.","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"This must be included in the pre_get_posts hook."}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>r});var o=n(6540);const t={},i=o.createContext(t);function l(e){const s=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),o.createElement(i.Provider,{value:s},e.children)}}}]);