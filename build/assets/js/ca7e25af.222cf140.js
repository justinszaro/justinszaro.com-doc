"use strict";(self.webpackChunkjustinszaro_com_docs=self.webpackChunkjustinszaro_com_docs||[]).push([[557],{9722:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"technologies/React/Packages/EasyPeasy/tutorials","title":"Easy Peasy Tutorials","description":"Quick Start","source":"@site/docs/technologies/React/Packages/EasyPeasy/tutorials.md","sourceDirName":"technologies/React/Packages/EasyPeasy","slug":"/technologies/React/Packages/EasyPeasy/tutorials","permalink":"/docs/technologies/React/Packages/EasyPeasy/tutorials","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"technologies","next":{"title":"Getting Started with Feathers.js","permalink":"/docs/technologies/React/Packages/Feather.js/getting-started"}}');var o=t(4848),a=t(8453);const i={},r="Easy Peasy Tutorials",d={},l=[{value:"Quick Start",id:"quick-start",level:2},{value:"Create the Store",id:"create-the-store",level:3},{value:"Binding the Store to your React App",id:"binding-the-store-to-your-react-app",level:3},{value:"Using State in your Components",id:"using-state-in-your-components",level:3},{value:"Defining Actions to Perform State Updates",id:"defining-actions-to-perform-state-updates",level:3},{value:"Dispatching Actions",id:"dispatching-actions",level:3},{value:"Encapsulating Side Effects Via Thunks",id:"encapsulating-side-effects-via-thunks",level:3},{value:"Dispatching Thunks within Your Components",id:"dispatching-thunks-within-your-components",level:3},{value:"Deriving State Via Computed Components",id:"deriving-state-via-computed-components",level:3},{value:"Using Computed Properties",id:"using-computed-properties",level:3},{value:"Persisting State",id:"persisting-state",level:3},{value:"Primary API",id:"primary-api",level:2},{value:"Introducing the Model",id:"introducing-the-model",level:3},{value:"State",id:"state",level:3},{value:"Actions",id:"actions",level:3},{value:"Arguments",id:"arguments",level:4},{value:"Modifying the State",id:"modifying-the-state",level:4},{value:"Scoping Actions",id:"scoping-actions",level:4},{value:"Bad Practices",id:"bad-practices",level:4},{value:"Creating a Store",id:"creating-a-store",level:3},{value:"Fun Facts about the store:",id:"fun-facts-about-the-store",level:4},{value:"Connecting the Store",id:"connecting-the-store",level:3},{value:"Using the Store",id:"using-the-store",level:3},{value:"The <code>useStoreState</code> hook:",id:"the-usestorestate-hook",level:4},{value:"Important Note on Selector Optimization",id:"important-note-on-selector-optimization",level:5},{value:"The <code>useStoreActions</code> Hook",id:"the-usestoreactions-hook",level:4},{value:"Thunks",id:"thunks",level:3},{value:"Defining Thunks",id:"defining-thunks",level:4},{value:"Dispatching Thunks",id:"dispatching-thunks",level:4},{value:"Computed Properties",id:"computed-properties",level:3},{value:"Defining a Computed Property",id:"defining-a-computed-property",level:4},{value:"Testing",id:"testing",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",ol:"ol",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"easy-peasy-tutorials",children:"Easy Peasy Tutorials"})}),"\n",(0,o.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,o.jsx)(n.h3,{id:"create-the-store",children:"Create the Store"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Define your store by providing a JS object to the ",(0,o.jsx)(n.code,{children:"createStore"})," function:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { createStore } from 'easy-peasy';\n\nconst store = createStore({\n  todos: [],\n});\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"These models can be as complex and nested as you'd like."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"binding-the-store-to-your-react-app",children:"Binding the Store to your React App"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Surround your application with the ",(0,o.jsx)(n.code,{children:"StoreProvider"})," component to bind it to your app."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { StoreProvider } from 'easy-peasy';\nimport { store } from './store';\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  rootEl,\n);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"using-state-in-your-components",children:"Using State in your Components"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"useStoreState"})," hook allows you to access your store's state:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { useStoreState } from 'easy-peasy';\n\nfunction Todos() {\n  const todos = useStoreState((state) => state.todos);\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <li>{todo.text}</li>\n      ))}\n    </ul>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"defining-actions-to-perform-state-updates",children:"Defining Actions to Perform State Updates"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Place an ",(0,o.jsx)(n.code,{children:"action"})," within your modal to support updates:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { createStore, action } from 'easy-peasy';\n\nconst store = createStore({\n  todos: [],\n  addTodo: action((state, payload) => {\n    state.todos.push({ text: payload, done: false });\n  }),\n});\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The action will receive the state it is local to. Update the state directly by mutating ",(0,o.jsx)(n.code,{children:"state"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"dispatching-actions",children:"Dispatching Actions"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"useStoreActions"})," hook allows you to access ",(0,o.jsx)(n.code,{children:"actions"})," from components."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { useStoreActions } from 'easy-peasy';\n\nfunction AddTodoForm() {\n  const addTodo = useStoreActions((actions) => actions.addTodo);\n  const [value, setValue] = React.useState('');\n  return (\n    <>\n      <input onChange={(e) => setValue(e.target.value)} value={value} />\n      <button onClick={() => addTodo(value)}>Add Todo</button>\n    </>\n  );\n}\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["In the example, the ",(0,o.jsx)(n.code,{children:"addTodo"})," action is resolved and bound to the click of the Add Todo button."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"encapsulating-side-effects-via-thunks",children:"Encapsulating Side Effects Via Thunks"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Thunks allow for the encapsulation of side effects, and allows the dispatching of actions to update the state."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { action, thunk } from 'easy-peasy';\n\nconst model = {\n  todos: [],\n  addTodo: action((state, payload) => {\n    state.todos.push(payload);\n  }),\n  saveTodo: thunk(async (actions, payload) => {\n    const { data } = await axios.post('/todos', payload);\n    actions.addTodo(data);\n  }),\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"dispatching-thunks-within-your-components",children:"Dispatching Thunks within Your Components"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Thunks are accessible in the same way as actions, via the ",(0,o.jsx)(n.code,{children:"useStoreActions"})," hook."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { useStoreActions } from 'easy-peasy';\n\nfunction AddTodoForm() {\n  const saveTodo = useStoreActions((actions) => actions.saveTodo);\n  const [value, setValue] = React.useState('');\n  return (\n    <>\n      <input onChange={(e) => setValue(e.target.value)} value={value} />\n      <button onClick={() => saveTodo(value)}>Add Todo</button>\n    </>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"deriving-state-via-computed-components",children:"Deriving State Via Computed Components"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["A derived state (such as a total price, number of items, etc) can be made using the ",(0,o.jsx)(n.code,{children:"computed"})," API:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { computed } from 'easy-peasy';\n\nconst store = createStore({\n  todos: [{ text: 'Learn easy peasy', done: true }],\n  completedTodos: computed((state) => state.todos.filter((todo) => todo.done)),\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"using-computed-properties",children:"Using Computed Properties"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Computed Properties can be accessed just like any other state."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { useStoreState } from 'easy-peasy';\n\nfunction completedTodos() {\n  const completedTodos = useStoreState((state) => state.completedTodos);\n  return (\n    <>\n      {completedTodos.map((todo) => (\n        <Todo todo={todo} />\n      ))}\n    </>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"persisting-state",children:"Persisting State"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If you want to persist your state, you can use the ",(0,o.jsx)(n.code,{children:"persist"})," API:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { persist } from 'easy-peasy';\n\nconst store = createStore(\n  persist({\n    count: 1,\n    inc: action((state) => {\n      state.count += 1;\n    }),\n  }),\n);\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The state will be stored in the sessionStorage."}),"\n",(0,o.jsxs)(n.li,{children:["If the process is asynchronous, you can use the ",(0,o.jsx)(n.code,{children:"useStoreRehydrated"})," hook to ensure rehydration is completed before the component is rendered."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { useStoreRehydrated } from 'easy-peasy';\n\nconst store = createStore(persist(model));\n\nfunction App() {\n  const isRehydrated = useStoreRehydrated();\n  return isRehydrated ? <Main /> : <div>Loading...</div>;\n"})}),"\n",(0,o.jsx)(n.h2,{id:"primary-api",children:"Primary API"}),"\n",(0,o.jsx)(n.h3,{id:"introducing-the-model",children:"Introducing the Model"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Easy Peasy stores are based on model definitions."}),"\n",(0,o.jsxs)(n.li,{children:["Models are just JS objects that represent everything about the store:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The State"}),"\n",(0,o.jsx)(n.li,{children:"The actions that can be performed on it"}),"\n",(0,o.jsx)(n.li,{children:"The encapsuled side effects"}),"\n",(0,o.jsx)(n.li,{children:"Computed Properties"}),"\n",(0,o.jsx)(n.li,{children:"etc."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"state",children:"State"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Below is a simple state model with a basic state structure with a list of todos:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const model = {\n  todos: [],\n};\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The below example is a more advanced, real world use:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const model = {\n  products: {\n    byId: {},\n  },\n  basket: {\n    productsInBasket: [],\n  },\n  userSession: {\n    isLoggedIn: false,\n    user: null,\n  },\n};\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"As the application grows, these can be made into imports:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import productsModel from './products-model';\nimport basketModel from './basket-model';\nimport userSessionModel from './user-session-model';\n\nconst model = {\n  products: productsModel,\n  basket: basketModel,\n  userSession: userSessionModel,\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"actions",children:"Actions"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"To perform updates against the state, an action must be defined:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { action } from 'easy-peasy';\n\nconst model = {\n  todos: [],\n  addTodo: action((state, payload) => {\n    state.todos.push(payload);\n  }),\n};\n"})}),"\n",(0,o.jsx)(n.h4,{id:"arguments",children:"Arguments"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["An action should receive a ",(0,o.jsx)(n.code,{children:"state"})," argument:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'{\n  "todos": []\n}\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The second argument to actions is the ",(0,o.jsx)(n.code,{children:"payload"}),", which will default to undefined."]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"modifying-the-state",children:"Modifying the State"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The bodies of actions should update the ",(0,o.jsx)(n.code,{children:"state"})," and utilize the payload if it influences the update."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { action } from 'easy-peasy';\n\nconst model = {\n  todos: [],\n  addTodo: action((state, payload) => {\n    return {\n      ...state,\n      todos: [...state.todos, payload],\n    };\n  }),\n};\n"})}),"\n",(0,o.jsx)(n.h4,{id:"scoping-actions",children:"Scoping Actions"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"You can attach actions at any level in the object model."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'const model = {\n  products: {\n    byId: {},\n  },\n  basket: {\n    productsInBasket: [],\n    // \ud83d\udc47 Defining a "nested" action\n    addProductToBasket: action((state, payload) => {\n      state.productsInBasket.push(payload);\n    }),\n  },\n  userSession: {\n    isLoggedIn: false,\n    user: null,\n  },\n};\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The action is received by the state that is local to it, as in the state would receive the following value:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'{\n  "productsInBasket": []\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"bad-practices",children:"Bad Practices"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Do not destructure the ",(0,o.jsx)(n.code,{children:"state"})," argument."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"action(({ todos }, payload) => {\n  //       \ud83d\udc46 destructuring the state argument is bad, m'kay\n  todos.push(payload);\n}),\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"This will result in the state not being updated."}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Do not execute any side effects within the action.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Actions should be synchronous and pure."}),"\n",(0,o.jsx)(n.li,{children:"They should do updates and not do things like make API requests."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"action(({ todos }, payload) => {\n  // \ud83d\udc47 side effects in actions are bad, m'kay\n  fetch('/todos').then(response => response.json()).then(data => {\n    state.todos = state.todos.concat(data);\n  });\n}),\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"If side effects need to happen, perform them in a Thunk."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"creating-a-store",children:"Creating a Store"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Once a model is defined, a store can be made:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { createStore } from 'easy-peasy';\nimport model from './model';\n\nconst store = createStore(model);\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"createStore"})," function has a few configuration options as well, such as a rendered state that was stored:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const store = createStore(model, {\n  initialState: serverRenderedState,\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"fun-facts-about-the-store",children:"Fun Facts about the store:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["It is a Redux Store","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"You can do anything to it that you would expect from a Redux store."}),"\n",(0,o.jsxs)(n.li,{children:["For example: from the ",(0,o.jsx)(n.code,{children:"react-redux"})," Provider"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { Provider } from 'react-redux';\nimport store from './my-easy-peasy-store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsxs)(n.li,{children:["It's a Redux Store (Again)","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["You can use all of the APIs of a standard ",(0,o.jsx)(n.a,{href:"https://redux.js.org/api/store",children:"Redux Store"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["There are a few additional enhancements to the API:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"There is no documentation on this currently!"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"connecting-the-store",children:"Connecting the Store"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["To utilize the store, you need to wrap your application in the ",(0,o.jsx)(n.code,{children:"StoreProvider"})," component."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { StoreProvider } from 'easy-peasy';\nimport store from './my-easy-peasy-store';\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"using-the-store",children:"Using the Store"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"There are a variety of hooks you can use to connect to the store:"}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"the-usestorestate-hook",children:["The ",(0,o.jsx)(n.code,{children:"useStoreState"})," hook:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { useStoreState } from 'easy-peasy';\n\nfunction Todos() {\n  const todos = useStoreState((state) => state.todos);\n  return <TodoList todos={todos} />;\n}\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"useStoreState"})," hook allows you to add a selector function to resolve the state that the component needs."]}),"\n",(0,o.jsx)(n.li,{children:"You can use this multiple times in a component to resolve various states that may be needed:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { useStoreState } from 'easy-peasy';\n\nfunction Todos() {\n  const todos = useStoreState((state) => state.todos);\n  return <TodoList todos={todos} />;\n}\n"})}),"\n",(0,o.jsx)(n.h5,{id:"important-note-on-selector-optimization",children:"Important Note on Selector Optimization"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"useStoreState"})," will execute any time an update to the store's state occurs."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"if (prevState !== nextState) {\n  console.log('We will re-render your component');\n} else {\n  console.log('We will do nothing');\n}\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Be careful not to return a selected that will always break strict equality checking:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"// These are some examples of selectors that may have negative performance\n// characteristics.\n\nuseStoreState((state) => {\n  // We are creating a new object every time!\n  return {\n    name: state.name,\n    age: state.age,\n  };\n});\n\nuseStoreState((state) => {\n  // We are returning a new array every time!\n  return [...state.fruits, ...state.vegetables];\n});\n"})}),"\n",(0,o.jsxs)(n.h4,{id:"the-usestoreactions-hook",children:["The ",(0,o.jsx)(n.code,{children:"useStoreActions"})," Hook"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"To use actions within our component we can utilize the useStoreActions hook."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { useStoreActions } from 'easy-peasy';\n\nfunction AddTodoForm() {\n  // We provide a selector to resolve an action, rather than state\n  //                                 \ud83d\udc47\n  const addTodo = useStoreActions((actions) => actions.addTodo);\n  const [value, setValue] = React.useState('');\n  return (\n    <>\n      <input onChange={(e) => setValue(e.target.value)} value={value} />\n      {/* Dispatch the action with a payload\n                                       \ud83d\udc47    */}\n      <button onClick={() => addTodo(value)}>Add Todo</button>\n    </>\n  );\n}\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Actions can be dispatched with or without a ",(0,o.jsx)(n.code,{children:"payload"})," argument."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"thunks",children:"Thunks"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Thunks can provide the ability to encapsulate side-effects."}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"defining-thunks",children:"Defining Thunks"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"You can define a thunk using the Thunk API"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { action, thunk } from 'easy-peasy';\n//                 \ud83d\udc46\n\nconst model = {\n  todos: [],\n  addTodo: action((state, payload) => {\n    state.todos.push(payload);\n  }),\n  //         \ud83d\udc47\n  saveTodo: thunk(async (actions, payload) => {\n    const { data } = await axios.post('/todos', payload);\n    actions.addTodo(data);\n  }),\n};\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The Thunk receives the actions that are local to the Thunk."}),"\n",(0,o.jsx)(n.li,{children:"Instead of async, Promises can also be used:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"saveTodo: thunk((actions, payload) => {\n  // Important to return the Promise\n  // \ud83d\udc47\n  return axios.post('/todos', payload)\n    .then(({ data }) => {\n      actions.addTodo(data);\n    });\n}),\n"})}),"\n",(0,o.jsx)(n.h4,{id:"dispatching-thunks",children:"Dispatching Thunks"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Thunks have some properties and recommended practices:"}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"You should handle errors within your Thunks."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { action, thunk } from 'easy-peasy';\n\nconst model = {\n  error: null,\n  todos: [],\n  addTodo: action((state, payload) => {\n    state.todos.push(payload);\n  }),\n  setError: action((state, payload) => {\n    state.error = payload;\n  }),\n  saveTodo: thunk(async (actions, payload) => {\n    try {\n      const { data } = await axios.post('/todos', payload);\n      actions.addTodo(data);\n    } catch (err) {\n      actions.setError(err.message);\n    }\n  }),\n};\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:"Thunks can be synchronous:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const model = {\n  actionOne: action((state, payload) => {\n    /* ... */\n  }),\n  actionTwo: action((state, payload) => {\n    /* ... */\n  }),\n  thunkOne: thunk((actions, payload) => {\n    if (condition) {\n      actions.actionOne(payload);\n    } else {\n      actions.actionTwo(payload);\n    }\n  }),\n};\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:"Thunks can dispatch other Thunks:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const model = {\n  actionOne: action()\n  thunkOne: thunk(async (actions, payload) => { /* ... */ }),\n  thunkTwo: thunk(async (actions, payload) => {\n    await actions.thunkOne(payload);\n    actions.actionOne(payload);\n  }),\n};\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsx)(n.li,{children:"Thunks can access the store state:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const model = {\n  todos: [],\n  saveAllTodos: thunk((actions, payload, helpers) => {\n    const { todos } = helpers.getState();\n    return Promise.all(todos.map((todo) => axios.post('/todos', todo)));\n  }),\n};\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"5",children:["\n",(0,o.jsx)(n.li,{children:"Data can be returned our of a thunk:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"// The Thunk\nconst model = {\n  thunkOne: thunk((actions, payload) => {\n    return `hello ${payload}`;\n  }),\n};\n\n// Example\nconst thunkOne = useStoreActions((actions) => actions.thunkOne);\n\nconst thunkDispatchResult = thunkOne('world');\n\nconsole.log(thunkDispatchResult);\n// \"hello world\"\n\n// Asynchronous Example\nconst asyncLoginThunk = useStoreActions((actions) => actions.asyncLoginThunk);\n\nasyncLoginThunk({ username: 'ww', password: 'ww1984' }).then(() => {\n  console.log('Login is complete');\n  // Redirect to new page?\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"computed-properties",children:"Computed Properties"}),"\n",(0,o.jsx)(n.h4,{id:"defining-a-computed-property",children:"Defining a Computed Property"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Use the ",(0,o.jsx)(n.code,{children:"computed"})," helper!"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { computed } from 'easy-peasy';\n//         \ud83d\udc46\n\nconst model = {\n  todos: [],\n  //            \ud83d\udc47\n  todoCount: computed((state) => state.todos.length),\n};\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Computed Properties should only be used to derive States!"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Different testing strategies can be found in the ",(0,o.jsx)(n.a,{href:"https://easy-peasy-v4.vercel.app/docs/tutorials/testing.html",children:"official documentation"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(6540);const o={},a=s.createContext(o);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);