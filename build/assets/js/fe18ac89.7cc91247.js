"use strict";(self.webpackChunkjustinszaro_com_docs=self.webpackChunkjustinszaro_com_docs||[]).push([[8710],{4918:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"technologies/Javascript/Packages/Express","title":"Express","description":"Learn Express Routes:","source":"@site/docs/technologies/Javascript/Packages/express.md","sourceDirName":"technologies/Javascript/Packages","slug":"/technologies/Javascript/Packages/Express","permalink":"/docs/technologies/Javascript/Packages/Express","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"javascript","permalink":"/docs/tags/javascript"},{"inline":true,"label":"express","permalink":"/docs/tags/express"}],"version":"current","frontMatter":{"id":"Express","tags":["javascript","express"]},"sidebar":"technologies","previous":{"title":"Mongoose","permalink":"/docs/technologies/Javascript/Packages/MongooseJS/Mongoose Quick Start"},"next":{"title":"jQuery Methods","permalink":"/docs/technologies/Javascript/Packages/jQuery"}}');var t=n(4848),a=n(8453);const o={id:"Express",tags:["javascript","express"]},i=void 0,c={},l=[];function d(e){const s={code:"code",em:"em",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Learn Express Routes:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Express - A powerful and flexible javascript framework for creating web servers and APIs."}),"\n",(0,t.jsx)(s.li,{children:"To create a server, you must invoke the express object."}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const express = require('express');\nconst app = express();\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"You must specify which port the express object is listening on."}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const PORT = 4001;\napp.listen(PORT, () => {\n  console.log(`Server is listening on port ${PORT}`);\n});\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"You determine what the Express does by establishing routes."}),"\n",(0,t.jsxs)(s.li,{children:["Routes define the control flow for requests based on the request\u2019s ",(0,t.jsx)(s.em,{children:"path"})," and HTTP verb."]}),"\n",(0,t.jsx)(s.li,{children:"You use app.get() to set up a route and what the route should return."}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const moods = [{ mood: 'excited about express!' }, { mood: 'route-tastic!' }];\napp.get('/moods', (req, res, next) => {\n  // Here we would send back the moods array in response\n});\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"If no routes are found, it will return a 404 error."}),"\n",(0,t.jsx)(s.li,{children:"app.use() will ensure the express is used once the browser is loaded."}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"app.use(express.static('public'));\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Requests and responses are 1:1. One request returns one response."}),"\n",(0,t.jsx)(s.li,{children:"res.send(input) will return any input to the client."}),"\n",(0,t.jsx)(s.li,{children:"res.json() will return any json formatted or (javascript object) back to the client."}),"\n",(0,t.jsx)(s.li,{children:"When an API request is called, it will search top to bottom for the correct route."}),"\n",(0,t.jsxs)(s.li,{children:["Routes can be used dynamically. Route parameters start with :","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["/monsters/",":id"," will take any route that includes monsters and a parameter."]}),"\n",(0,t.jsx)(s.li,{children:"Parameters are stored in req.params"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"app.get('/expressions/:id', (req, res, next) => {\n  console.log(req.params.id);\n  res.send(getElementById(req.params.id, expressions));\n});\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Status codes can be attached to responses before being returned to the client."}),"\n",(0,t.jsx)(s.li,{children:"Doing res.status() before res.send will change the response code sent back to the client."}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"res.status(404).send('Monster not found');\n"})})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>i});var r=n(6540);const t={},a=r.createContext(t);function o(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);