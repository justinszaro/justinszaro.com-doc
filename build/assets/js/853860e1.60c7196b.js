"use strict";(self.webpackChunkjustinszaro_com_docs=self.webpackChunkjustinszaro_com_docs||[]).push([[3507],{4052:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"technologies/MySQL/MySQL Advanced Topics","title":"MySQL Advanced Topics","description":"Why Index?","source":"@site/docs/technologies/MySQL/mysql-advanced-topics.md","sourceDirName":"technologies/MySQL","slug":"/technologies/MySQL/MySQL Advanced Topics","permalink":"/docs/technologies/MySQL/MySQL Advanced Topics","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"mysql","permalink":"/docs/tags/mysql"}],"version":"current","frontMatter":{"id":"MySQL Advanced Topics","tags":["mysql"]},"sidebar":"technologies","previous":{"title":"Modifying Data With MySql","permalink":"/docs/technologies/MySQL/Modifying Data With MySql"},"next":{"title":"Querying Relational Databases","permalink":"/docs/technologies/MySQL/Querying Relational Databases"}}');var r=s(4848),l=s(8453);const t={id:"MySQL Advanced Topics",tags:["mysql"]},d="MySQL Advanced Topics",c={},o=[{value:"Why Index?",id:"why-index",level:2},{value:"Views &amp; Subselects",id:"views--subselects",level:2},{value:"Stored Routines",id:"stored-routines",level:2},{value:"Creating a Stored Function",id:"creating-a-stored-function",level:3},{value:"Creating a Stored Procedure",id:"creating-a-stored-procedure",level:3},{value:"Transactions",id:"transactions",level:2},{value:"Triggers",id:"triggers",level:2},{value:"Foreign Keys",id:"foreign-keys",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mysql-advanced-topics",children:"MySQL Advanced Topics"})}),"\n",(0,r.jsx)(n.h2,{id:"why-index",children:"Why Index?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Index - a small data structure that can rapidly locate an item in a larger data structure."}),"\n",(0,r.jsxs)(n.li,{children:["Most databases use a form of binary tree for their indexes","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Drastically reduces the number of comparisons"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Index Use Cases:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Rapid Lookups"}),"\n",(0,r.jsx)(n.li,{children:"Enforcing Queries"}),"\n",(0,r.jsx)(n.li,{children:"Ordered Queries"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Costs of Indexing","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each write operation corresponds with one or more write operations in the index."}),"\n",(0,r.jsxs)(n.li,{children:["Storage Space","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Indexes take space!"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["When to use indexes","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Primary Keys"}),"\n",(0,r.jsxs)(n.li,{children:["Columns used for ",(0,r.jsx)(n.code,{children:"ORDER BY"})]}),"\n",(0,r.jsxs)(n.li,{children:["Columns used in ",(0,r.jsx)(n.code,{children:"WHERE"})," clauses","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"WHERE col = value"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"WHERE col > value"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Indexes are dropped when a table is dropped."}),"\n",(0,r.jsx)(n.li,{children:"Schema and databases are terms that are used interchangeably."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"views--subselects",children:"Views & Subselects"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Views are just saved queries that can be used like tables. This is fantastic when you know a query is going to be used over and over again."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"stored-routines",children:"Stored Routines"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Stored Routine - A set of SQL statements that are stored on a database server and can be used by any client with permissions to use them."}),"\n",(0,r.jsxs)(n.li,{children:["Benefits of stored routines:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Normalized operations"}),"\n",(0,r.jsx)(n.li,{children:"Centralized Maintenance"}),"\n",(0,r.jsx)(n.li,{children:"Reduced Traffic between client and server"}),"\n",(0,r.jsx)(n.li,{children:"Enhanced security: allows clients to interact with the database with reduced permissions"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Drawbacks of stored routines:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Migrations can be way more costly."}),"\n",(0,r.jsx)(n.li,{children:"Maintenance Challenges"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Two types of stored routines:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Functions:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Functions return a value."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Procedures:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Procedures are called separately using the ",(0,r.jsx)(n.code,{children:"CALL"})," statement."]}),"\n",(0,r.jsx)(n.li,{children:"Can return result sets or result variables."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"creating-a-stored-function",children:"Creating a Stored Function"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE FUNCTION testfunc ( s VARCHAR(255) )\nRETURNS VARCHAR(255)\n    BEGIN\n        RETURN CONCAT( 'Hello, ', s, '!' );\n    END;\n\nSELECT testfunc('Bill'); -- Hello, Bill!\n"})}),"\n",(0,r.jsx)(n.h3,{id:"creating-a-stored-procedure",children:"Creating a Stored Procedure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE PROCEDURE testproc ( n VARCHAR(16) )\nBEGIN\n    SELECT CONCAT( 'Hello, ', n, '!' );\nEND;\n\nCALL testproc('Bill'); -- Hello, Bill!\n"})}),"\n",(0,r.jsx)(n.h2,{id:"transactions",children:"Transactions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Transactions: a group of operations that are handled as one unit of work."}),"\n",(0,r.jsx)(n.li,{children:"If any of the operations fails, the entire group of operations is considered failed and the database returns to its original state."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"BEGIN TRANSACTION;\n  INSERT INTO TABLE1;\n  INSERT INTO TABLE2;\n  SELECT *;\nCOMMIT;\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Transactions are used for concurrent operations.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each transaction for multiple people will be treated as its own transaction."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"It also improves performance when there are numerous write operations."}),"\n",(0,r.jsx)(n.li,{children:"For 10000 rows, the performance is about 10-1."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"triggers",children:"Triggers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Operations that are automatically performed when a specific database action occurs."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"FOR EACH ROW"})," is required."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"NEW."})," will allow you to access the new row that is being added."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SHOW TRIGGERS;"})," - Show all triggers associated with a database."]}),"\n",(0,r.jsx)(n.li,{children:"Triggers are dropped if the table is dropped."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DROP TRIGGER <triggerName>;"})," - Allows you to drop a trigger."]}),"\n",(0,r.jsx)(n.li,{children:"Triggers can allow you to restrict rows from being changed."}),"\n",(0,r.jsxs)(n.li,{children:["You can do a before edit using ",(0,r.jsx)(n.code,{children:"BEFORE UPDATE ON <table_name>"}),"."]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'cannot update reconciled row: widgetSale';"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AFTER INSERT ON"}),"/",(0,r.jsx)(n.code,{children:"BEFORE INSERT ON"})," allows you to do actions before or after inserts."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"foreign-keys",children:"Foreign Keys"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Foreign key constraints keep data consistent across tables."}),"\n",(0,r.jsx)(n.li,{children:"Allows propagation of changes throughout the database."}),"\n",(0,r.jsx)(n.li,{children:"Foreign keys reference another table."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UPDATE"})," (any update)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CASCADE"})," (Update or delete)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"RESTRICT"})," (Doesn't allow the operation)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"NULL"})," (sets it to null)"]}),"\n",(0,r.jsx)(n.li,{children:"Indexes are required for foreign keys."}),"\n",(0,r.jsxs)(n.li,{children:["Reference another key in a different table ",(0,r.jsx)(n.code,{children:"REFERENCE <table.column>"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Two options: ",(0,r.jsx)(n.code,{children:"ON DELETE"})," and ",(0,r.jsx)(n.code,{children:"ON UPDATE"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(6540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);