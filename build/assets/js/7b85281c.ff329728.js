"use strict";(self.webpackChunkjustinszaro_com_docs=self.webpackChunkjustinszaro_com_docs||[]).push([[8947],{1232:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"technologies/PHP/PHP Basics","title":"PHP Basics","description":"PHP Code","source":"@site/docs/technologies/PHP/basics.md","sourceDirName":"technologies/PHP","slug":"/technologies/PHP/PHP Basics","permalink":"/docs/technologies/PHP/PHP Basics","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"php","permalink":"/docs/tags/php"}],"version":"current","frontMatter":{"id":"PHP Basics","tags":["php"]},"sidebar":"technologies","previous":{"title":"SQL Reporting By Example","permalink":"/docs/technologies/MySQL/SQL Reporting By Example"},"next":{"title":"Browser Persistent Data","permalink":"/docs/technologies/PHP/Browser Persistent Data"}}');var l=i(4848),t=i(8453);const r={id:"PHP Basics",tags:["php"]},o="PHP Basics",a={},d=[{value:"PHP Code",id:"php-code",level:2},{value:"Getting Started with PHP",id:"getting-started-with-php",level:2},{value:"Intro to Workspaces and PHP Code",id:"intro-to-workspaces-and-php-code",level:2},{value:"PHP Comments",id:"php-comments",level:2},{value:"Variables in PHP",id:"variables-in-php",level:2},{value:"Integers",id:"integers",level:3},{value:"Floats",id:"floats",level:3},{value:"Arithmetic Operators",id:"arithmetic-operators",level:2},{value:"Creating a simple Unit Conversion Tool",id:"creating-a-simple-unit-conversion-tool",level:2},{value:"Strings",id:"strings",level:2},{value:"Escaped Sequences",id:"escaped-sequences",level:3},{value:"Combining Strings",id:"combining-strings",level:3},{value:"Booleans",id:"booleans",level:2},{value:"Comparing Values",id:"comparing-values",level:3},{value:"Adding logic to programs",id:"adding-logic-to-programs",level:3},{value:"Daily Exercise Program",id:"daily-exercise-program",level:2},{value:"HTML and PHP",id:"html-and-php",level:2},{value:"Don\u2019t Repeat Yourself",id:"dont-repeat-yourself",level:2},{value:"Let PHP Do the Work",id:"let-php-do-the-work",level:2},{value:"Combining Multiple Files with Includes",id:"combining-multiple-files-with-includes",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"php-basics",children:"PHP Basics"})}),"\n",(0,l.jsx)(n.h2,{id:"php-code",children:"PHP Code"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"<?php CODE ?>"}),": Tag around PHP code."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"echo"}),": Display information to the screen."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"//"}),": Creates a single line comment."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"/*   */"}),": Multiline Comment."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"$variable;"})," and ",(0,l.jsx)(n.code,{children:"$variable = value;"}),": Ways of establishing variables in PHP."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"var_dump()"}),": Returns the type of the variable."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"+, -, *, /, **"}),": Mathematical Operators."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"+=, -=, *=, /="}),": Combined Operators."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"\\n"}),": Newline."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"\\t"}),": Tab."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"."}),": Concatenate multiple strings/values together."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:".="}),": Concatenates multiple values into a string using an assignment operator."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"=="}),": Compare two variables regardless of type."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"==="}),": Compares two variables but must be the same type."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"if (condition) {   }"}),": An if statement in PHP."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"else {    }"}),": An else statement in PHP."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"elseif {    }"}),": Chains if statements in PHP."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"getlastmod()"}),": Get the last time that the page was modified."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"include \u2018rel path\u2019"}),": Include other PHP files into the webpage."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"getting-started-with-php",children:"Getting Started with PHP"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"One of the most widely used technologies."}),"\n",(0,l.jsx)(n.li,{children:"First released in 1995."}),"\n",(0,l.jsx)(n.li,{children:"PHP: Personal Homepage Tools now PHP Hyper-text Preprocessor."}),"\n",(0,l.jsx)(n.li,{children:"Maintained by 10 developers and comes with many frameworks and packages."}),"\n",(0,l.jsx)(n.li,{children:"No installation needed, comes preinstalled normally."}),"\n",(0,l.jsx)(n.li,{children:"Can be embedded into HTML using code blocks."}),"\n",(0,l.jsx)(n.li,{children:"Does not need to be compiled."}),"\n",(0,l.jsx)(n.li,{children:"Server Side Language - code is processed on the web server. The user only receives HTML."}),"\n",(0,l.jsx)(n.li,{children:"Will not see PHP code in browser when testing."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"intro-to-workspaces-and-php-code",children:"Intro to Workspaces and PHP Code"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"PHP can also be used as a general scripting language."}),"\n",(0,l.jsx)(n.li,{children:"Can be run in a CLI (Command Line Interface)."}),"\n",(0,l.jsx)(n.li,{children:"PHP Code is put into codeblocks."}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"<?php INSERT CODE HERE ?>"}),": Code block."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"echo"}),": Command that displays information to the screen."]}),"\n",(0,l.jsx)(n.li,{children:"Each line ends with a semicolon."}),"\n",(0,l.jsx)(n.li,{children:"PHP does not care about extra whitespace."}),"\n",(0,l.jsx)(n.li,{children:"Spacing is still best practice for readability."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"php-comments",children:"PHP Comments"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Comments allow you to make notes in code to make the code easier to read."}),"\n",(0,l.jsx)(n.li,{children:"Can explain the how and why."}),"\n",(0,l.jsx)(n.li,{children:"Comments allow for better organization."}),"\n",(0,l.jsxs)(n.li,{children:["Three types of comments:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Single Line: Created using two forward slashes ",(0,l.jsx)(n.code,{children:"//"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Multi Line: A single line can span multiple lines if no hard returns are used. Can also use multiple single line comments. For multi lines: Use a forward slash and an asterisk ",(0,l.jsx)(n.code,{children:"/*     */"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Doc Block: Is used to give documentation for specific sections of code or the entire file. Should include author, summary, version, and license. Created using ",(0,l.jsx)(n.code,{children:"/*"})," and ends with ",(0,l.jsx)(n.code,{children:"*/"})," but each line has a space and an asterisk."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"variables-in-php",children:"Variables in PHP"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Two parts of Code:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Retrieval and storage of data."}),"\n",(0,l.jsx)(n.li,{children:"Logic of what to do with data and when."}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Variables are boxes for data, it can change shape or form, but it is the same variable."}),"\n",(0,l.jsx)(n.li,{children:"Variables are identified by their own unique name."}),"\n",(0,l.jsxs)(n.li,{children:["Always begin with a ",(0,l.jsx)(n.code,{children:"$"})," in PHP."]}),"\n",(0,l.jsx)(n.li,{children:"Variables cannot be started with a number."}),"\n",(0,l.jsx)(n.li,{children:"Can be created empty by just putting the semicolon."}),"\n",(0,l.jsxs)(n.li,{children:["A value can be established using the ",(0,l.jsx)(n.code,{children:"="})," sign."]}),"\n",(0,l.jsxs)(n.li,{children:["4 Scalar variable types are supported in PHP:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Bool"}),"\n",(0,l.jsx)(n.li,{children:"Int"}),"\n",(0,l.jsx)(n.li,{children:"Floats"}),"\n",(0,l.jsx)(n.li,{children:"Strings"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"There are also arrays and objects in PHP."}),"\n",(0,l.jsxs)(n.li,{children:["A variable reference must also have the ",(0,l.jsx)(n.code,{children:"$"})," sign."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"integers",children:"Integers"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Integers are whole numbers 1 - 9 and can be negative."}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"var_dump()"}),": Prints in the output what a variable is and its type."]}),"\n",(0,l.jsx)(n.li,{children:"Supports all the normal operators. (+, -, *, /)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"floats",children:"Floats"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Keep track of fractional and decimal values."}),"\n",(0,l.jsx)(n.li,{children:"Normally used to keep track of distance or currency."}),"\n",(0,l.jsx)(n.li,{children:"Supports the basic operators."}),"\n",(0,l.jsx)(n.li,{children:"A floating point will return a float type if it is used in any operator."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"arithmetic-operators",children:"Arithmetic Operators"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Anything that takes two or more values and returns one value. Normally are the math operators."}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"*"})," is the multiplication operator."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"/"})," is the division operator."]}),"\n",(0,l.jsx)(n.li,{children:"The operators will return the type that is needed for the result of the operation."}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"++"})," is the incrementing operator. Will add one to a value."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-"})," is the decrementing operator. Will subtract one from a value."]}),"\n",(0,l.jsx)(n.li,{children:"If these operators are before the variable, they will return the result in the same call. If they are after, they will not return the operated results."}),"\n",(0,l.jsxs)(n.li,{children:["Also supports combined operators: (",(0,l.jsx)(n.code,{children:"+="}),", ",(0,l.jsx)(n.code,{children:"-="}),", ",(0,l.jsx)(n.code,{children:"*="}),", ",(0,l.jsx)(n.code,{children:"/="}),")."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"creating-a-simple-unit-conversion-tool",children:"Creating a simple Unit Conversion Tool"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"echo"}),": Outputs information all on the same line."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"strings",children:"Strings"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"A string is a series of characters specified between single or double quotations."}),"\n",(0,l.jsx)(n.li,{children:"Single quotes strings represent each character in the string."}),"\n",(0,l.jsx)(n.li,{children:"Double quoted strings allow you to represent variables inside the string."}),"\n",(0,l.jsx)(n.li,{children:"PHP adds/expands the variable in the string."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"escaped-sequences",children:"Escaped Sequences"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Escape Sequences allow you to put certain symbols in strings using a backslash."}),"\n",(0,l.jsx)(n.li,{children:"Break out of the way PHP normally interprets strings."}),"\n",(0,l.jsxs)(n.li,{children:["Two types:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Backslashes with an alphanumeric character. Ex: ",(0,l.jsx)(n.code,{children:"\\n"}),": newline, ",(0,l.jsx)(n.code,{children:"\\t"}),": tab."]}),"\n",(0,l.jsxs)(n.li,{children:["Backslashes with a symbol. Ex: ",(0,l.jsx)(n.code,{children:"\\$"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["You can display the other types of quotes if it is surrounded by the first type: ",(0,l.jsx)(n.code,{children:"'This would show \u201cdouble quotes\u201d'"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Escape sequences are only used for double quotes except for ",(0,l.jsx)(n.code,{children:"\\'"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"combining-strings",children:"Combining Strings"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Concatenation - Combining data into a string."}),"\n",(0,l.jsxs)(n.li,{children:["Two string operators for concatenation:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"."}),": Adds 1 or more strings together."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:".="}),": Adds the argument on the right to the variable on the left."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Statements can be combined using multiple lines, but it is not normally as readable as on one line."}),"\n",(0,l.jsx)(n.li,{children:"If on multiple lines, start with the concatenation character."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"booleans",children:"Booleans"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Can either be true or false. Can take on no other values."}),"\n",(0,l.jsx)(n.li,{children:"Not case sensitive when it comes to boolean values. Can either be true or True."}),"\n",(0,l.jsx)(n.li,{children:"Should normally be lowercase."}),"\n",(0,l.jsx)(n.li,{children:"Order of Operations: Top down."}),"\n",(0,l.jsx)(n.li,{children:"We can test program conditions using an if statement."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"comparing-values",children:"Comparing Values"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Operators can also compare two values. These are called comparison operators."}),"\n",(0,l.jsx)(n.li,{children:"Equal and Identical Comparers."}),"\n",(0,l.jsx)(n.li,{children:"PHP is a weakly or loosely typed language. Types do not need to be specified."}),"\n",(0,l.jsx)(n.li,{children:"PHP will juggle types to make them usable in more situations."}),"\n",(0,l.jsx)(n.li,{children:"Ex: Adding a string to an integer will result in an int type."}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"=="})," compares two variables regardless of type."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"==="})," compares two variables but must be the same type."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"adding-logic-to-programs",children:"Adding logic to programs"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Evaluating and taking actions with data is done by using conditional statements."}),"\n",(0,l.jsx)(n.li,{children:"If statements are the simplest of these."}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"if (condition) { }"})," is the syntax for an if statement."]}),"\n",(0,l.jsx)(n.li,{children:"An else statement will have the program do something if the if condition is not true."}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"else {    }"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"daily-exercise-program",children:"Daily Exercise Program"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["The ",(0,l.jsx)(n.code,{children:"date()"})," function. Attribute is the way we want the date to be formatted."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"\u2018N\u2019"})," is the day of the week."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"html-and-php",children:"HTML and PHP"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"PHP was defined to be used to make web pages."}),"\n",(0,l.jsx)(n.li,{children:"PHP can be added anywhere in an HTML file by using the PHP code tag."}),"\n",(0,l.jsx)(n.li,{children:"The server needs to know that there is PHP in the file by changing the HTML extension to PHP."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"dont-repeat-yourself",children:"Don\u2019t Repeat Yourself"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use PHP variables to change multiple elements throughout the code."}),"\n",(0,l.jsx)(n.li,{children:"Useful when you need to use the same string multiple times."}),"\n",(0,l.jsx)(n.li,{children:"You can use multiple PHP blocks throughout a webpage."}),"\n",(0,l.jsx)(n.li,{children:"You only see HTML in the inspect element, not the PHP code."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"let-php-do-the-work",children:"Let PHP Do the Work"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"date()"})," function allows you to pull the current date."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"getlastmod()"}),": Gets time of last page modification."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"combining-multiple-files-with-includes",children:"Combining Multiple Files with Includes"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"PHP allows the inclusion of other files of codes while keeping them separate."}),"\n",(0,l.jsx)(n.li,{children:"It allows for better organization."}),"\n",(0,l.jsx)(n.li,{children:"Allows for less repetition."}),"\n",(0,l.jsx)(n.li,{children:"Files that are included in the webpage are normally in a file called inc."}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"include \u2018rel path\u2019"}),": In PHP, to control the output of PHP echos, HTML tags can be included in the PHP string to control the output."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(6540);const l={},t=s.createContext(l);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);